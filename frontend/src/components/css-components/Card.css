/* ============================================
   CARD COMPONENT STYLES
   ============================================
   Componente de tarjeta reutilizable con glassmorphism
   Optimizado para evitar conflictos de z-index
   ============================================ */

/* Card base */
.card {
  /* Layout y posicionamiento */
  position: relative;
  width: 100%;
  
  /* Glassmorphism effect */
  background: rgba(255, 255, 255, 0.7);
  
  /* IMPORTANTE: backdrop-filter crea un nuevo stacking context
     que puede causar problemas de z-index con calendarios/modales.
     Usamos will-change: transform en lugar de backdrop-filter
     cuando el card contiene elementos con z-index alto */
  backdrop-filter: blur(20px);
  -webkit-backdrop-filter: blur(20px);
  
  /* Bordes y sombras */
  border: 1px solid rgba(255, 255, 255, 0.3);
  border-radius: 1rem;
  box-shadow: 
    0 4px 6px -1px rgba(0, 0, 0, 0.1),
    0 2px 4px -1px rgba(0, 0, 0, 0.06),
    inset 0 1px 0 0 rgba(255, 255, 255, 0.1);
  
  /* Transiciones suaves */
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  
  /* Aislamiento de stacking context */
  isolation: isolate;
  
  /* Z-index base bajo para cards normales */
  z-index: 0;
}

/* Card que contiene elementos interactivos (datepickers, selects, etc.) */
.card-interactive {
  /* Remover backdrop-filter para evitar stacking context issues */
  backdrop-filter: none;
  -webkit-backdrop-filter: none;
  
  /* Usar sombra más pronunciada para compensar pérdida de blur */
  background: rgba(255, 255, 255, 0.95);
  
  /* CRÍTICO: Permitir que elementos como calendarios salgan del card */
  overflow: visible !important;
  z-index: 1;
}

/* El contenido también debe permitir overflow visible */
.card-interactive .card-content {
  overflow: visible !important;
}

/* Contenido interno del card */
.card-content {
  padding: 1.5rem;
  position: relative;
  z-index: 0;
}

/* Card sin padding (para contenido customizado) */
.card.card-no-padding .card-content {
  padding: 0;
}

/* Card con efecto hover */
.card-hover {
  cursor: pointer;
}

.card-hover:hover {
  transform: translateY(-2px);
  box-shadow: 
    0 20px 25px -5px rgba(0, 0, 0, 0.1),
    0 10px 10px -5px rgba(0, 0, 0, 0.04),
    inset 0 1px 0 0 rgba(255, 255, 255, 0.15);
  border-color: rgba(59, 130, 246, 0.3);
}

.card-hover:active {
  transform: translateY(0);
}

/* Card header */
.card-header {
  padding: 1.5rem 1.5rem 0 1.5rem;
  border-bottom: 1px solid rgba(0, 0, 0, 0.05);
  margin-bottom: 1rem;
}

.card-header:last-child {
  border-bottom: none;
  margin-bottom: 0;
  padding-bottom: 1.5rem;
}

/* Card body */
.card-body {
  padding: 1rem 1.5rem;
}

/* Card footer */
.card-footer {
  padding: 1rem 1.5rem;
  border-top: 1px solid rgba(0, 0, 0, 0.05);
  margin-top: 1rem;
  background: rgba(249, 250, 251, 0.5);
  border-radius: 0 0 1rem 1rem;
}

/* Variantes de color del card */
.card-primary {
  background: linear-gradient(
    135deg,
    rgba(59, 130, 246, 0.1) 0%,
    rgba(147, 197, 253, 0.05) 100%
  );
  border-color: rgba(59, 130, 246, 0.2);
}

.card-success {
  background: linear-gradient(
    135deg,
    rgba(34, 197, 94, 0.1) 0%,
    rgba(134, 239, 172, 0.05) 100%
  );
  border-color: rgba(34, 197, 94, 0.2);
}

.card-warning {
  background: linear-gradient(
    135deg,
    rgba(234, 179, 8, 0.1) 0%,
    rgba(253, 224, 71, 0.05) 100%
  );
  border-color: rgba(234, 179, 8, 0.2);
}

.card-danger {
  background: linear-gradient(
    135deg,
    rgba(239, 68, 68, 0.1) 0%,
    rgba(252, 165, 165, 0.05) 100%
  );
  border-color: rgba(239, 68, 68, 0.2);
}

/* Responsive */
@media (max-width: 640px) {
  .card-content {
    padding: 1rem;
  }
  
  .card-header,
  .card-body,
  .card-footer {
    padding-left: 1rem;
    padding-right: 1rem;
  }
}

/* Dark mode support (opcional para futuro) */
@media (prefers-color-scheme: dark) {
  .card {
    background: rgba(17, 24, 39, 0.7);
    border-color: rgba(55, 65, 81, 0.5);
  }
  
  .card-interactive {
    background: rgba(17, 24, 39, 0.95);
  }
}

/* Estados especiales */
.card-loading {
  pointer-events: none;
  opacity: 0.6;
}

.card-disabled {
  pointer-events: none;
  opacity: 0.5;
  filter: grayscale(50%);
}

/* Animación de entrada */
@keyframes cardFadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.card-animate {
  animation: cardFadeIn 0.3s ease-out;
}
